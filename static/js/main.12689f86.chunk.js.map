{"version":3,"sources":["hooks.tsx","components/LayoutComp.tsx","appSlice.tsx","apis/index.js","pages/Application/ApplicationPage.tsx","utils/timeFormatter.js","pages/Calendar/CalendarPage.tsx","pages/History/HistoryPage.tsx","pages/HistoryView/HistoryViewPage.js","pages/Home/HomePage.tsx","components/common/Button.tsx","pages/Login/LoginPage.tsx","pages/Profile/ProfilePage.tsx","theme/theme.tsx","pages/Register/RegisterPage.tsx","App.tsx","theme/themeSlice.tsx","store.tsx","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","LayoutBox","styled","div","props","theme","colors","default","MainBox","background","MainComp","children","HeaderBox","header","underline","Header","className","to","style","color","fontSize","fontWeight","Header2","history","useHistory","onClick","e","stopPropagation","goBack","icon","faChevronLeft","size","BottomTabBarBox","BottomTabBar","iconColor","state","isDark","faHome","faCalendar","faPlus","faList","faUser","LayoutComp","initialState","createEntityAdapter","getInitialState","profile","token","appSlice","createSlice","name","reducers","setProfile","action","payload","setToken","extraReducers","reducer","actions","API_ADDRESS","getProfile","a","axios","url","method","headers","Authorization","response","console","log","Square","Inner","TitleBox","ApplicationPage","app","dispatch","useState","moment","get","etcDate","totalDate","usedDate","year","_id","thisYearVacationCounts","setThisYearVacationCounts","dispachProfile","status","data","useEffect","vacationCounts","filter","item","date","setDate","startDate","setStartDate","endDate","setEndDate","vacationType","timeType","reason","submitObject","setSubmitObjet","setUsedDate","jumpToMonth","num","clone","add","subtract","handleSubmitObject","value","handleSubmit","window","alert","format","_endDate","_startDate","setScreenType","screenType","display","flex","justifyContent","alignItems","flexDirection","src","width","height","borderRadius","padding","margin","overflow","borderBottom","marginRight","marginBottom","type","onChange","target","outlineStyle","border","faChevronRight","map","el","position","startWeek","startOf","week","endWeek","endOf","calendar","push","Array","fill","n","i","current","baColor","fontColor","isBefore","isAfter","isSameOrBefore","_current","_usedDate","diff","handleDayClick","generate","timeFormatter_Ymd","timeFormat","timeFormatter_YmdHM","TimeFormat_Ymd","Date","TimeFormat_YmdHM","ListItemBox","CalendarPage","today","hours","selected","setSelected","dayVacation","setDayVacation","getDayVacation","day","localTime","proposedStartDate","proposedEndDate","monthVacations","setMonthVacations","getMonthVacations","startDay","endDay","paddingTop","member","thumbnail","backgroundColor","nickname","role","VacationCalendar","idx","findIndex","vacation","isSameOrAfter","bottom","left","ListBox","HistoryBox","HistoryPage","myVacations","setMyVacations","timeFormatter","getMyVacations","pathname","lineHeight","HistoryViewPage","id","useParams","setVacation","successRemove","setSuccessRemove","removeVacation","HomeBox","ListTitleBox","gray","HomePage","commingVacations","setCommingVacations","todayVacations","setTodayVacations","getTodayVacations","getCommingVacations","slice","length","StyledButton","Button","title","LoginPage","email","password","form","setForm","localStorage","setItem","placeholder","marginTop","top","ProfilePage","thiYear","dispatchProfile","marginLeft","faCog","dateOfAntry","clear","cursor","calcRem","fontSizes","small","base","lg","xl","xxl","xxxl","titleSize","paddings","margins","interval","verticalInterval","deviceSizes","mobileS","mobileM","mobileL","tablet","tabletL","lightTheme","primary","secondary","font_1","font_2","white","black","darkTheme","gray_1","gray_2","green_1","device","RegisterPage","d","split","Number","getFullYear","setType","handleNext","next","isShowPassword","setShowPassword","right","prev","faEye","faEyeSlash","PrivateRoute","rest","render","location","from","App","access_token","getItem","path","component","exact","themeSlice","setIsDart","store","configureStore","themeReducer","appReducer","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.12689f86.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import React, { Children } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome, faCalendar, faList , faPlus, faUser, faBackspace, faBackward, faChevronLeft} from '@fortawesome/free-solid-svg-icons'\nimport styled from 'styled-components';\nimport { useAppSelector } from 'hooks';\n\n\ninterface IProps {\n    children: JSX.Element | Array<JSX.Element>\n}\n\nexport const LayoutBox = styled.div`\n    position: absolute;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    background: ${(props) => props.theme.colors.default};\n\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    overflow: scroll;\n`\n\nfunction LayoutComp ({children}:IProps) {\n    return (\n        <LayoutBox >\n            <Header />\n\n            {/* <div style={{maxWidth: 500, width: '100%',display: 'flex', flexDirection: 'column', background: '#1E1E1E', height: '100%', paddingTop: 50, paddingBottom: 58 }}> */}\n                <MainComp>{children}</MainComp>\n\n\n            <BottomTabBar />\n        </LayoutBox>\n    )\n}\n\nconst MainBox = styled.div`\n    max-width: 500px;\n    width:  100%;\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    padding-top: 50px;\n    padding-bottom: 58px;\n    background-color: ${(props) => props.theme.colors.background};\n`\nexport const MainComp = ({children}:IProps) => {\n    return (\n        <MainBox>\n            {children}\n        </MainBox>\n    )\n}\n\nconst HeaderBox = styled.header`\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 3rem;\n    \n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    .header-content {\n        width: 500px;\n        height: 3rem;\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n        list-style: none;\n        padding-left: 1rem;\n        padding-right: 1rem;\n        background-color: ${(props) => props.theme.colors.background};\n        border-bottom: ${(props) => `2px solid ${props.theme.colors.underline}`};\n    }\n`\nconst Header = () => {\n    return (\n        <HeaderBox>\n            <div className=\"header-content\">\n                <Link to=\"/\" ><div style={{color: '#47BDFE', fontSize: 20, fontWeight: 'bold'}}>WVMS</div></Link>\n                <div></div>\n            </div>\n        </HeaderBox>\n    )\n}\n\nexport const Header2 = () => {\n    let history = useHistory();\n\n    let back = ( e : React.MouseEvent<HTMLDivElement, MouseEvent> )  => {\n        e.stopPropagation();\n        history.goBack();\n    };\n\n    return (\n        <HeaderBox>\n            <div className=\"header-content\">\n                <div onClick={back}>\n                    <FontAwesomeIcon icon={faChevronLeft} size={'sm'} color={'#555'} /> \n                </div>\n               \n                <div></div>\n            </div>\n        </HeaderBox>\n    )\n}\n\n//<div style={{color: '#47BDFE', fontSize: 20, fontWeight: 'bold'}}>WVMS</div>\n\nconst BottomTabBarBox = styled.div`\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    display: flex;\n    justify-content: center; \n    align-items: center;\n\n    .bottomTabBar-content {\n        width: 500px;\n        height: 58px;\n        display: flex;\n        flex-direction: row;\n        justify-content: space-around;\n        align-items: center;\n        list-style: none;\n        background-color: ${(props) => props.theme.colors.background};\n        border-top: ${(props) => `2px solid ${props.theme.colors.underline}`};\n    }\n\n`\n\nexport const BottomTabBar = () => {\n    const {isDark} = useAppSelector((state) => state.theme);\n    const iconColor = isDark ? 'white' : 'black';\n    return (\n        <BottomTabBarBox>\n                <div className=\"bottomTabBar-content\" >\n                    <Link to=\"/\" > <FontAwesomeIcon icon={faHome} color={iconColor}/></Link>\n                    <Link to=\"/calendar\" > <FontAwesomeIcon icon={faCalendar}color={iconColor} /></Link>\n                    <Link to=\"/Application\" ><FontAwesomeIcon icon={faPlus} color={iconColor}/></Link>\n                    <Link to=\"/history\" > <FontAwesomeIcon icon={faList} color={iconColor}/></Link>\n                    <Link to=\"/profile\" > <FontAwesomeIcon icon={faUser} color={iconColor}/></Link>\n                </div>\n        </BottomTabBarBox>\n    )\n}\n\n\nexport default LayoutComp;","import {\n    createSlice,\n    createEntityAdapter,\n    createAsyncThunk,\n    // createAsyncThunk,\n    // createSelector,\n  } from '@reduxjs/toolkit';\n//   import Axios from 'axios';\n//   import { API_ADDRESS } from '../../services';\n  \n  export const appAdapter = createEntityAdapter();\n  const initialState = appAdapter.getInitialState({\n    profile: null,\n    token: null,\n  });\n  \n  // export const updateUserInfo = createAsyncThunk(\n  //   'myInfo/updateUserInfo',\n  //   async (params, { getState, requestId }) => {\n  //     const { loading, currentRequestId } = getState().faq;\n  //     console.log('call fetchFaq');\n  //     if (loading !== 'pending' || currentRequestId !== requestId) {\n  //       return;\n  //     }\n  //     try {\n  //       const response = await Axios({\n  //         method: 'put',\n  //         url: `${API_ADDRESS}/user`,\n  //         headers: { Authorization: `Bearer ${params.accessToken}` },\n  //         data: params.userInfo,\n  //         timeout: 3000,\n  //       });\n  \n  //       console(response);\n  //       return response.data;\n  //       // console.log(response);\n  //       // if (response.success) {\n  //       //   return response.list;\n  //       // } else {\n  //       //   return [];\n  //       // }\n  //     } catch (e) {\n  //       console.log(e);\n  //     }\n  //   },\n  // );\n  \n  export const appSlice = createSlice({\n    name: 'app',\n    initialState: initialState,\n    reducers: {\n        setProfile: (state, action) => { state.profile = action.payload},\n        setToken: (state, action) => {state.token = action.payload},\n    },\n    extraReducers: {\n      // [updateUserInfo.pending]: (state, action) => {\n      //   if (state.loading === 'idle') {\n      //     state.loading = 'pending';\n      //     state.currentRequestId = action.meta.requestId;\n      //   }\n      // },\n      // [updateUserInfo.fulfilled]: (state, action) => {\n      //   const { requestId } = action.meta;\n      //   if (state.loading === 'pending' && state.currentRequestId === requestId) {\n      //     state.loading = 'idle';\n      //     state.faqList = action.payload;\n      //     state.currentRequestId = undefined;\n      //   }\n      // },\n      // [updateUserInfo.rejected]: (state, action) => {\n      //   const { requestId } = action.meta;\n      //   if (state.loading === 'pending' && state.currentRequestId === requestId) {\n      //     state.loading = 'idle';\n      //     state.error = action.error;\n      //     state.currentRequestId = undefined;\n      //   }\n      // },\n    },\n  });\n  \n  const { reducer, actions } = appSlice;\n  export const { setProfile, setToken } = actions;\n  export default reducer;\n  ","import axios from \"axios\";\n\nexport const API_ADDRESS = \"http://wvms-back.herokuapp.com/api\"\n// export const API_ADDRESS = 'http://localhost:3011/api';\n\nexport const getProfile = async (token: string) => {\n    try{\n      const response = await axios({\n        url: `${API_ADDRESS}/auth/profile`,\n        method: 'get',\n        headers: { Authorization: `Bearer ${token}` },\n    })\n    console.log('getProfile : ', response);\n    return response;\n  \n    // return response;\n\n    }catch(e) {\n      console.log('getProfile Error :', e)\n      return e.response;\n    }\n}","import LayoutComp from 'components/LayoutComp';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport moment, { Moment as MomentTypes, months } from 'moment'\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronCircleRight, faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport { useAppDispatch, useAppSelector } from 'hooks';\nimport { unstable_batchedUpdates } from 'react-dom';\nimport { setProfile } from 'appSlice';\nimport { API_ADDRESS, getProfile } from 'apis';\n\nconst Square = styled.div`\n    width: 50%;\n    /* background-color: blue; */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n\n   &:after {\n    content: \"\";\n    display: block;\n    padding-bottom: 100%;\n    }\n`;\n\nconst Inner = styled.div`\n    position: absolute;\n    /* background-color: skyblue; */\n    /* border-radius: '50%'; */\n`;\n\nconst ListItemBox = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0.5rem 1rem;\n    background-color: #D8DBEF;\n    margin: 0.5rem;\n    border-radius: 8px;\n\n    .left {\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-start;\n        align-items: center;\n    }\n\n    .left-name-box {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        margin-left: 1rem;\n        /* background-color: pink; */\n        height: 36px;\n    }\n\n    .name {\n        font-size: 1rem;\n        font-weight: 600;\n\n    }\n\n    .position {\n        font-size: 0.8rem;\n        color: darkgray;\n    }\n\n    .right {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        align-items: flex-end;\n    }\n\n    .right-date {\n        font-size: 0.8rem;\n        color: black;\n    }\n\n    .right-type {\n        font-size: 0.8rem;\n        color: black;\n    }\n\n`;\n\nconst TitleBox = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    padding: 1rem 1rem;\n    font-weight: bold;\n`;\n\ninterface IVacationCounts {\n    etcDate: number;\n    totalDate: number;\n    usedDate: number;\n    year: number;\n    _id: string;\n}\n\nfunction ApplicationPage () {\n\n    const { token } = useAppSelector(state => state.app);\n    const profile: any  = useAppSelector(state => state.app.profile)\n    const dispatch = useAppDispatch();\n\n    const [thiYear, setThisYear] = useState<number>(() => moment().get('year'))  \n    const [thisYearVacationCounts, setThisYearVacationCounts] = useState<IVacationCounts>({\n        etcDate: 0,\n        totalDate: 0,\n        usedDate: 0,\n        year: 0,\n        _id: \"id\"\n    })\n\n    const dispachProfile = async (token: string) => {\n        const response = await getProfile(token);\n        if(response.status === 200 ){\n          dispatch(setProfile(response.data));\n        }\n      }\n\n    useEffect(()=>{\n        // console.log(moment().get('year'))\n        console.log(profile)\n        const thisYearVacationCounts = profile.vacationCounts.filter((item : {year: number} ) => item.year === moment().get('year'));\n        setThisYearVacationCounts(thisYearVacationCounts[0]);\n        console.log(thisYearVacationCounts)\n        dispachProfile(token);\n    },[]);\n\n    const [date, setDate] = useState<moment.Moment>(() => moment());\n    const [startDate, setStartDate] = useState<moment.Moment | null>(null); // 휴가 신청 시작 날짜\n    const [endDate, setEndDate] = useState<moment.Moment | null>(null); // 휴가 신청 끝나는 날짜\n    const [submitObject, setSubmitObjet] = useState({\n        vacationType: \"연차\",\n        timeType: \"하루종일\",\n        reason: \"\",\n    })\n    const [usedDate, setUsedDate] = useState<number>(0);\n\n    const jumpToMonth = (num: number) => {\n        if(num) {\n            console.log(date.clone().add(30, 'day'))\n            setDate(date.clone().add(30, 'day'))\n        }else{\n            console.log(date.clone().add(30, 'day'))\n            setDate(date.clone().subtract(30, 'day'))\n        }\n    }\n\n    const handleDayClick = (current: moment.Moment) => {\n        if( !moment().subtract(1,'day').isSameOrBefore(current) ) {\n            window.alert('휴가 신청을 할 수 없는 날짜 입니다.');\n        }else if(submitObject.vacationType === ''){\n            window.alert('휴가 유형을 선택해주세요.')\n        }else if(submitObject.timeType === ''){\n            window.alert('시간 유형을 선택해주세요.')\n        }else if(submitObject.timeType === '오전반차' || submitObject.timeType === '오후반차' ) {\n            console.log('aaaa', thisYearVacationCounts.totalDate - thisYearVacationCounts.usedDate - 0.5);\n            if(thisYearVacationCounts.totalDate - thisYearVacationCounts.usedDate - 0.5 < 0) {\n                window.alert('죄송합니다. 남은 연차가 부족합니다.');\n                return;\n            }\n            setStartDate(current);\n            setEndDate(null);\n            setUsedDate(0.5);\n        } else if(submitObject.timeType === '하루종일') {\n            if(endDate) {\n                console.log('startDate', current)\n                setStartDate(current);\n                setEndDate(null);\n                setUsedDate(1);\n                console.log('_usedDate', 1)\n            }else{\n                if(!startDate || startDate.isAfter(current) ) {\n                    console.log('startDate', current)\n                    if(thisYearVacationCounts.totalDate - thisYearVacationCounts.usedDate - 1 < 0) {\n                        window.alert('죄송합니다. 남은 연차가 부족합니다.');\n                        return;\n                    }\n\n                    setStartDate(current);\n                    setEndDate(null);\n                    setUsedDate(1);\n                    console.log('_usedDate', 1)\n                } else{\n                    // let _endDate = moment(startDate).add(9, 'hours').format();\n                    let _current = current;\n                    let _usedDate = moment(_current.add(9,'hours')).diff(startDate, 'days') + 1;\n                    if(thisYearVacationCounts.totalDate - thisYearVacationCounts.usedDate - _usedDate < 0) {\n                        window.alert('죄송합니다. 남은 연차가 부족합니다.');\n                        return;\n                    }\n                    \n                    console.log('_usedDate', _usedDate)\n                    setEndDate(_current);\n                    // setEndDate(current.add(9, 'hours'));\n                    console.log('endDate', _current)\n                    setUsedDate(_usedDate);\n                    \n                }\n            }\n        }\n    }\n\n    const generate = () =>  {\n        const startWeek = date.clone().startOf(\"month\").week();\n        const endWeek = date.clone().endOf(\"month\").week() === 1 ? 53 :  date.clone().endOf(\"month\").week();\n        \n        let calendar = [];\n\n        // console.log(date, startWeek, endWeek)\n\n        for (let week = startWeek; week <= endWeek; week++ ){\n            calendar.push(\n                <div className=\"week\" style={{display:'flex', justifyContent: 'space-between'}} key={week}>\n                  {Array(7)\n                    .fill(0)\n                    .map((n, i) => {\n                      // 오늘 => 주어진 주의 시작 => n + i일 만큼 더해서 각 주의 '일'을 표기한다.\n                      let current = date\n                        .clone()\n                        .week(week)\n                        .startOf('week')\n                        .add(n + i, 'day')\n                        .add(10,'hours');\n        \n                      // 오늘이 current와 같다면 우선 '선택'으로 두자\n                    //   let isSelected = selected.format('YYYYMMDD') === current.format('YYYYMMDD') ? 'gary' : '';\n                      \n                      let baColor = 'none'\n                      let fontColor = current.format('MM') !== date.format('MM') ? '#e5e5e5' : 'black';\n                      \n                      if(startDate?.format('YYYYMMDD') === current.format('YYYYMMDD')){\n                        baColor  = '#1B73E8';\n                        fontColor = '#fff';\n                      }\n\n                      if(startDate?.isBefore(current) && endDate?.isAfter(current) ){\n                        baColor  = '#D2E2FC'\n                        fontColor = '#1B73E8';\n                      }\n\n                      if(endDate?.format('YYYYMMDD') === current.format('YYYYMMDD')){\n                        baColor  = '#1B73E8';\n                        fontColor = '#fff';\n                      }\n\n                      // 만약, 이번 달이 아닌 다른 달의 날짜라면 회색으로 표시하자\n                    //   let isGrayed = current.format('MM') !== date.format('MM') ? '#e5e5e5' : '';\n\n        \n                      return (\n                        <Square key={i} onClick={() => handleDayClick(current)}> \n                            <Inner>\n                                <div style={{\n                                    width: 40, \n                                    height: 40, \n                                    display: 'flex', \n                                    justifyContent: 'center', \n                                    alignItems: 'center', \n                                    borderRadius: 50, \n                                    background: baColor,\n                                    color: fontColor\n                                }}>{current.format('D')}</div>\n                                {/* <div style={{width: 4, height: 4, background: 'red', position: 'absolute', bottom: 5, left: 18, borderRadius: 50}}/> */}\n                            </Inner>\n                        </Square>\n                      );\n                    })}\n                </div>,\n              );\n        }\n        return calendar;\n    };\n\n\n\n    type HandleSubmitObjectProps = {\n        name: string;\n        value: string;\n      };\n\n    const handleSubmitObject = ({name, value}: HandleSubmitObjectProps) => {\n        console.log({ ...submitObject, [name]: value})\n        setSubmitObjet({ ...submitObject, [name]: value});\n        if(name === 'timeType' && value !== submitObject.timeType){\n            setStartDate(null);\n            setEndDate(null);\n        }\n    }\n\n    const handleSubmit = async () => {\n        if(usedDate === 0) {\n            window.alert('휴가를 신청할 날짜를 선택하세요.')\n            return;\n        }\n        let data = { ...submitObject, \n            usedDate,\n            startDate: moment(startDate).format(), \n            endDate: moment(endDate).format(), \n\n        };\n\n        if(submitObject.timeType === '하루종일') {\n            if(endDate === null) {\n                let _endDate = moment(startDate).add(9, 'hours').format();\n                // let _usedDate = moment(_endDate).diff(startDate, 'days') + 1\n                data = {\n                    ...data,\n                    endDate: _endDate,\n                    // usedDate: _usedDate,\n                }\n            }else{\n                // let _usedDate = moment(endDate).diff(startDate, 'days') + 1\n                data = {\n                    ...data,\n                    // usedDate: _usedDate,\n                }\n            }\n\n\n        }else if(submitObject.timeType === '오전반차') {\n                let _endDate = moment(startDate).add(5, 'hours').format();\n                // let _usedDate = 0.5;\n                data = {\n                    ...data,\n                    endDate: _endDate,\n                    // usedDate: _usedDate,\n                }\n        }else if(submitObject.timeType === '오후반차') {\n                let _startDate = moment(startDate).add(5, 'hours').format();\n                let _endDate = moment(startDate).add(9, 'hours').format();\n                // let _usedDate = 0.5;\n                data = {\n                    ...data,\n                    startDate: _startDate,\n                    endDate: _endDate,\n                    // usedDate: _usedDate,\n                }\n        }\n        console.log('token', token);\n        console.log('data', data)\n\n        try{\n            const response = await axios({\n                url: `${API_ADDRESS}/vacations`,\n                method: 'post',\n                data: data,\n                headers: { Authorization: `Bearer ${token}` },\n            })\n            if(response.status == 200 ){\n                setScreenType('success');\n            }\n            console.log('response', response);\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    // {\n    //     \"vacationType\": \"Annual\",\n    //     \"timeType\": \"8h\",\n    //     \"startDate\": \"Mon Jul 28 2021 00:00:00 GMT+0900 (대한민국 표준시)\",\n    //     \"endDate\": \"Wed Jul 30 2021 23:59:59 GMT+0900 (대한민국 표준시)\",\n    //     \"reason\": \"테스트 입니다. 6\",\n    //     \"usedDate\": 3\n    // }\n\n    const [apply, setApply] = useState(false);\n    const [screenType, setScreenType] = useState('prev'); // prev, apply, success, fail\n\n    if(screenType === 'prev') {\n        return (\n            <LayoutComp>\n                    <div style={{display: 'flex', flex: 1, justifyContent: 'center', alignItems: 'center', flexDirection:'column'}}>\n                        <img src=\"https://img.freepik.com/free-vector/beach-vacations_24908-53916.jpg?size=626&ext=jpg\" style={{width: 250, height: 250, borderRadius: '50%'}} />\n                        {/* <div>휴가 신청 하시겠습니까?</div> */}\n                        {/* <button onClick={() => setApply(true)} >휴가 신청 </button> */}\n\n                        <div \n                        style={{background: '#1B73E8', color: 'white',  padding: '0.5rem 4rem', margin: '2rem 1rem', borderRadius: '16px', display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n                        onClick={() => setScreenType('apply')}\n                        >휴가 신청하러 가기</div>\n                    </div>\n            </LayoutComp>\n        )\n    }\n\n    if(screenType === 'success') {\n        return (\n            <LayoutComp>\n                    <div style={{display: 'flex', flex: 1, justifyContent: 'center', alignItems: 'center', flexDirection:'column'}}>\n                        휴가 신청이 완료되었습니다 :)\n                        {/* <img src=\"https://img.freepik.com/free-vector/beach-vacations_24908-53916.jpg?size=626&ext=jpg\" style={{width: 250, height: 250, borderRadius: '50%'}} /> */}\n                        {/* <div>휴가 신청 하시겠습니까?</div> */}\n                        {/* <button onClick={() => setApply(true)} >휴가 신청 </button> */}\n\n                        {/* <div \n                        style={{background: '#1B73E8', color: 'white',  padding: '0.5rem 4rem', margin: '2rem 1rem', borderRadius: '16px', display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n                        onClick={() => setScreenType('apply')}\n                        >휴가 신청하러 가기</div> */}\n                    </div>\n            </LayoutComp>\n        )\n    }\n\n    return (\n        <LayoutComp>\n            {/* {\n                screenType === 'prev' ? (\n                    <div style={{display: 'flex', flex: 1, justifyContent: 'center', alignItems: 'center', flexDirection:'column'}}>\n                        <img src=\"https://img.freepik.com/free-vector/beach-vacations_24908-53916.jpg?size=626&ext=jpg\" style={{width: 200, height: 200, borderRadius: '50%'}} />\n\n                        <div \n                        style={{background: '#1B73E8', color: 'white',  padding: '0.5rem 2rem', margin: '2rem 1rem', borderRadius: '16px', display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n                        onClick={() => handleSubmit()}\n                        >휴가 신청하러 가기</div>\n                    </div>\n                ) :  ( */}\n                <div style={{overflow: 'scroll'}}>\n                <TitleBox>휴가 신청하기</TitleBox>\n                <div style={{padding: '0.5rem 1rem', borderBottom: '2px solid #e5e5e5', display: 'flex', justifyContent: 'space-between'}}>\n                    <div>휴가 유형</div>\n                    <div style={{display: 'flex', flexDirection: 'row'}}>\n                        <div style={{padding: '0.1rem 0.5rem', background: submitObject.vacationType === '연차' ? '#1B73E8' : '#e5e5e5', color: submitObject.vacationType === '연차' ? '#ffffff' : '#111111', borderRadius: '16px', marginRight: '0.5rem'}} onClick={() => handleSubmitObject({name: 'vacationType', value: '연차'})}>연차</div>\n                        <div style={{padding: '0.1rem 0.5rem', background: submitObject.vacationType === '특별휴가' ? '#1B73E8' : '#e5e5e5', color: submitObject.vacationType === '특별휴가' ?  '#ffffff' : '#111111', borderRadius: '16px', marginRight: '0.5rem'}} onClick={() => handleSubmitObject({name: 'vacationType', value: '특별휴가'})}>특별휴가</div>\n                    </div>\n                </div>\n                <div style={{padding: '0.5rem 1rem', borderBottom: '2px solid #e5e5e5', display: 'flex', justifyContent: 'space-between'}}>\n                    <div>시간 유형</div>\n                    <div style={{display: 'flex', flexDirection: 'row'}}>\n                        <div style={{padding: '0.1rem 0.5rem', background: submitObject.timeType === '하루종일' ? '#1B73E8' : '#e5e5e5', color: submitObject.timeType === '하루종일' ?  '#ffffff' : '#111111', borderRadius: '16px', marginRight: '0.5rem'}} onClick={() => handleSubmitObject({name: 'timeType', value: '하루종일'})}>하루종일</div>\n                        <div style={{padding: '0.1rem 0.5rem', background: submitObject.timeType === '오전반차' ? '#1B73E8' : '#e5e5e5', color: submitObject.timeType === '오전반차' ?  '#ffffff' : '#111111',borderRadius: '16px', marginRight: '0.5rem'}} onClick={() => handleSubmitObject({name: 'timeType', value: '오전반차'})}>오전반차</div>\n                        <div style={{padding: '0.1rem 0.5rem', background: submitObject.timeType === '오후반차' ? '#1B73E8' : '#e5e5e5', color: submitObject.timeType === '오후반차' ?  '#ffffff' : '#111111',borderRadius: '16px', marginRight: '0.5rem'}} onClick={() => handleSubmitObject({name: 'timeType', value: '오후반차'})}>오후반차</div>\n                    </div>\n                </div>\n                <div style={{padding: '0.5rem 1rem', borderBottom: '2px solid #e5e5e5', display: 'flex', flexDirection: 'column'}}>\n                    <div style={{marginBottom: '0.5rem'}}>휴가 사유</div>\n                        <input type=\"text\" name=\"email\" value={submitObject.reason} onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleSubmitObject({name: 'reason', value: e.target.value})} style={{outlineStyle: 'none', border: '0px solid gray', background: '#e5e5e5', height: '3rem', borderRadius: '8px', padding: '0.5rem'}} />\n                </div>\n                <div style={{display:'flex', flexDirection:'row', justifyContent: 'space-between', padding: '1rem'}}>\n                    <div onClick={() => jumpToMonth(0) }>\n                        <FontAwesomeIcon icon={faChevronLeft} />\n                    </div>\n                    \n                    <div>{date.format('YYYY. MM')}</div>\n                    <div onClick={() => jumpToMonth(1)} >\n                    <FontAwesomeIcon icon={faChevronRight} />    \n                    </div>\n                </div>\n\n                <div style={{ borderBottom: '2px solid #e5e5e5', display: 'flex', flexDirection: 'column'}}>\n                    <div className=\"week\" style={{display:'flex', justifyContent: 'space-around'}}>\n                    {[\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"].map(el => (\n                        <span key={el} style={{width: 36, height: 24, display: 'flex', justifyContent: 'center', alignItems: 'center', color: 'darkgray'}}>{el}</span>\n                    ))}\n                    </div>\n                    <div style={{position: 'relative'}}>{generate()}</div>\n                </div>\n\n                <div>\n                    <div style={{margin: '1rem'}}>{`휴가 신청 후, 남은 연차 일수는 ${thisYearVacationCounts.totalDate - thisYearVacationCounts.usedDate - usedDate}일 입니다.`}</div>\n                    <div \n                        style={{background: '#1B73E8', color: 'white',  padding: '0.5rem', margin: '2rem 1rem', borderRadius: '16px', display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n                        onClick={() => handleSubmit()}\n                    >휴가 신청하기</div>\n                </div>\n            </div> \n            {/* )\n        } */}\n\n        </LayoutComp>\n    )\n}\n\nexport default ApplicationPage;","import { timeFormat } from 'd3-time-format';\n\nconst timeFormatter_Ymd = timeFormat('%Y.%m.%d');\nconst timeFormatter_YmdHM = timeFormat('%Y.%m.%d %H:%M');\n\nexport const TimeFormat_Ymd = (data) => timeFormatter_Ymd(new Date(data));\nexport const TimeFormat_YmdHM = (data) => timeFormatter_YmdHM(new Date(data));","import LayoutComp from 'components/LayoutComp';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport moment, { Moment as MomentTypes, months } from 'moment'\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronCircleRight, faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport { timeFormat } from 'd3-time-format';\nimport { TimeFormat_Ymd } from 'utils/timeFormatter';\nimport { API_ADDRESS } from 'apis';\n\nconst Square = styled.div`\n    width: 50%;\n    /* background-color: blue; */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n\n   &:after {\n    content: \"\";\n    display: block;\n    padding-bottom: 100%;\n    }\n`;\n\nconst Inner = styled.div`\n    position: absolute;\n    /* background-color: skyblue; */\n    /* border-radius: '50%'; */\n`;\n\nconst ListItemBox = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0.5rem 1rem;\n    background-color: #eeeeee;\n    margin: 0 0.5rem 0.5rem 0.5rem;\n    border-radius: 8px;\n\n    .left {\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-start;\n        align-items: center;\n    }\n\n    .left-name-box {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        margin-left: 1rem;\n        /* background-color: pink; */\n        height: 36px;\n    }\n\n    .name {\n        font-size: 1rem;\n        font-weight: 600;\n\n    }\n\n    .position {\n        font-size: 0.8rem;\n        color: darkgray;\n    }\n\n    .right {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        align-items: flex-end;\n    }\n\n    .right-date {\n        font-size: 0.8rem;\n        color: black;\n    }\n\n    .right-type {\n        font-size: 0.8rem;\n        color: black;\n    }\n\n`;\n\nfunction CalendarPage () {\n    // 처음 페이지가 로드 되었을 때\n    // 오늘 날짜를 기준으로 전달, 이번달, 다음달을 배열로 가지고 있자?\n    const [calendars, setCalendars] = useState([]);\n    const timeFormatter = timeFormat('%Y/%m/%d');\n\n    const [date, setDate] = useState<moment.Moment>(() => moment());\n    const [today, setToday] = useState<moment.Moment>(() => moment());\n    \n    const [selected, setSelected] = useState<moment.Moment>(() => moment().hours(15));\n\n    const jumpToMonth = (num: number) => {\n        if(num) {\n            console.log(date.clone().add(30, 'day'))\n            setDate(date.clone().add(30, 'day'))\n        }else{\n            console.log(date.clone().add(30, 'day'))\n            setDate(date.clone().subtract(30, 'day'))\n        }\n    }\n\n    const handleDayClick = (current: moment.Moment) : void => {\n        console.log(current)\n        setSelected(current);\n        // getDayVacation(current);\n    }\n\n    const [dayVacation, setDayVacation] = useState<any[]>([]);\n\n    const getDayVacation = async (day: moment.Moment ) => {\n        console.log('getDayVacation');\n        const localTime = day.format('YYYY-MM-DD'); // store localTime\n        const proposedStartDate = localTime + \"T00:00:00.000Z\"; \n        const proposedEndDate = localTime + \"T23:59:59.000Z\";\n\n        try{\n            const response = await axios({\n                url: `${API_ADDRESS}/vacations?from=${proposedStartDate}&to=${proposedEndDate}`,\n                method: 'get',\n            })\n            console.log(response);\n            setDayVacation(response.data);\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    const [monthVacations, setMonthVacations] = useState<any[]>([]);\n    \n    const getMonthVacations =  async () => {\n        console.log('getMonthVacations');\n        const startWeek = date.clone().startOf(\"month\").week();\n        const endWeek = date.clone().endOf(\"month\").week() === 1 ? 53 :  date.clone().endOf(\"month\").week();\n        const startDay = date.clone().week(startWeek).startOf('week').add(0, 'day');\n        const endDay = date.clone().week(endWeek).startOf('week').add(6, 'day');\n\n        const startDate =startDay.format('YYYY-MM-DD'); // store localTime\n        const proposedStartDate = startDate + \"T00:00:00.000Z\";\n        const endDate = endDay.format('YYYY-MM-DD');\n        const proposedEndDate = endDate + \"T23:59:59.000Z\";\n\n        // const startDate = moment().add(1, 'days').format('YYYY-MM-DD'); // store localTime\n        // const proposedStartDate = startDate + \"T00:00:00.000Z\";\n        // const endDate = moment().add(30, 'days').format('YYYY-MM-DD');\n        // const proposedEndDate = endDate + \"T23:59:59.000Z\";\n\n        console.log(proposedStartDate, proposedEndDate);\n        try{\n            const response = await axios({\n                url: `${API_ADDRESS}/vacations?from=${proposedStartDate}&to=${proposedEndDate}`,\n                method: 'get',\n            })\n            console.log( response);\n            setMonthVacations(response.data);\n        }catch(e){\n            console.log(e);\n            // return e;\n        }\n    }\n \n    useEffect(()=>{\n        getMonthVacations();\n        setDayVacation([]);  \n    }, [date]);\n\n    useEffect(()=>{\n        \n        // const today = moment();\n        getDayVacation(selected);\n    }, [selected]);\n\n    return (\n        <LayoutComp>\n            <div style={{display:'flex', flexDirection:'row', justifyContent: 'space-between', padding: '1rem'}}>\n                <div onClick={() => jumpToMonth(0) }>\n                    <FontAwesomeIcon icon={faChevronLeft} />\n                </div>\n                \n                <div>{date.format('YYYY. MM')}</div>\n                <div onClick={() => jumpToMonth(1)} >\n                <FontAwesomeIcon icon={faChevronRight} />    \n                </div>\n            </div>\n\n            <div style={{borderBottom: '2px solid #e5e5e5', display: 'flex', flexDirection: 'column'}}>\n                <div className=\"week\" style={{display:'flex', justifyContent: 'space-around'}}>\n                {[\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"].map(el => (\n                     <span key={el} style={{width: 36, height: 24, display: 'flex', justifyContent: 'center', alignItems: 'center', color: 'darkgray'}}>{el}</span>\n                ))}\n                </div>\n                <VacationCalendar  date={date} today={today} selected={selected} monthVacations={monthVacations} handleDayClick={handleDayClick}/>\n            </div>\n\n\n            <div style={{overflow: 'scroll', paddingTop: '0.5rem'}}>\n                {\n                    dayVacation.map(item => {\n                        return (\n                            <ListItemBox key={item._id}>\n                            <div className=\"left\">\n                                <img src={`${item?.member?.thumbnail}`} style={{width: '38px', height: '38px', backgroundColor: 'skyblue', borderRadius: 16}}/>\n                                <div className=\"left-name-box\">\n                                    <div className=\"name\">{`${item?.member?.nickname || ''} (${item?.member?.name || ''})`}</div>\n                                    <div className=\"position\">{item?.member?.role || ''}</div>\n                                </div>\n                            </div>\n                            \n                            <div className=\"right\">\n                            <div className=\"right-date\">{`${TimeFormat_Ymd(new Date(item.startDate))} - ${TimeFormat_Ymd(new Date(item.endDate))}`}</div> \n                            <div className=\"right-type\">{`${item.vacationType} (${item.usedDate})`}</div>\n                            </div>\n                        </ListItemBox>\n                        )\n                    })\n                }\n            </div>\n        </LayoutComp>\n    )\n}\n\nexport default CalendarPage;\n\ninterface IVacationCalendar {\n    date : moment.Moment,\n    today: moment.Moment,\n    selected: moment.Moment,\n    monthVacations: any[],\n    handleDayClick: (current: moment.Moment ) => void\n}\n\nconst VacationCalendar = ({date, today, selected, monthVacations, handleDayClick} : IVacationCalendar) : any => {\n\n    const generate = () =>  {\n        const startWeek = date.clone().startOf(\"month\").week();\n        const endWeek = date.clone().endOf(\"month\").week() === 1 ? 53 :  date.clone().endOf(\"month\").week();\n        \n        let calendar = [];\n\n        for (let week = startWeek; week <= endWeek; week++ ){\n            calendar.push(\n                <div className=\"week\" style={{display:'flex', justifyContent: 'space-between'}} key={week}>\n                  {Array(7)\n                    .fill(0)\n                    .map((n, i) => {\n                      // 오늘 => 주어진 주의 시작 => n + i일 만큼 더해서 각 주의 '일'을 표기한다.\n                      let current = date\n                        .clone()\n                        .week(week)\n                        .startOf('week')\n                        .add(n + i, 'day')\n                        .add(15,'hours');\n                        \n        \n                      // 오늘이 current와 같다면 우선 '선택'으로 두자\n                    //   let isSelected = selected.format('YYYYMMDD') === current.format('YYYYMMDD') ? 'gary' : '';\n                      \n                      let baColor = 'none';\n                      let fontColor = current.format('MM') !== date.format('MM') ? '#e5e5e5' : '';\n\n                      if(today.format('YYYYMMDD') === current.format('YYYYMMDD')){\n                        baColor  = '#1B73E8';\n                        fontColor = '#fff';\n                      }else if(selected.format('YYYYMMDD') === current.format('YYYYMMDD')){\n                        baColor  = '#D2E2FC';\n                        fontColor = '#1B73E8';\n                      }\n\n                      const idx = monthVacations.findIndex( vacation => moment(vacation.startDate).isSameOrBefore(current) && moment(vacation.endDate).isSameOrAfter(current) )\n                      console.log('monthVacations idx',idx);\n                    //   const _hasEvent =  hasEvent(current);\n\n                      // 만약, 이번 달이 아닌 다른 달의 날짜라면 회색으로 표시하자\n                    //   let isGrayed = current.format('MM') !== date.format('MM') ? '#e5e5e5' : '';\n\n                      return (\n                        <Square key={i} onClick={() => handleDayClick(current)}> \n                            <Inner>\n                                <div style={{\n                                    width: 40, \n                                    height: 40, \n                                    display: 'flex', \n                                    justifyContent: 'center', \n                                    alignItems: 'center', \n                                    borderRadius: 50, \n                                    background: baColor,\n                                    color: fontColor\n                                }}>{current.format('D')}</div>\n                                {\n                                    idx !== -1 ? <div style={{width: 4, height: 4, background: 'red', position: 'absolute', bottom: 5, left: 18, borderRadius: 50}}/> : null\n                                }\n                            </Inner>\n                        </Square>\n                      );\n                    })}\n                </div>\n              );\n        }\n        return calendar;\n    };\n\n    \n    return generate();\n}","import LayoutComp from 'components/LayoutComp';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\nimport ReactModal from 'react-modal';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { useAppSelector } from 'hooks';\nimport { Link } from 'react-router-dom'; \nimport { timeFormat } from 'd3-time-format';\nimport moment from 'moment';\nimport { API_ADDRESS } from 'apis';\n\nconst ListBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 1rem;\n`\n\nconst ListTitleBox = styled.div`\n    font-weight: 500;\n    /* background-color: pink; */\n    padding: 0.5rem 1rem;\n    border-bottom: 1px solid lightgray;\n`;\n\nconst ListItemBox = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    background: #e5e5e5;\n    padding: 0.5rem 1rem;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    margin-bottom: 0.5rem;\n    border-radius: 8px;\n`;\n\nconst TitleBox = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    padding: 1rem 1rem;\n    font-weight: bold;\n`;\n\nconst HistoryBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    overflow: scroll;\n`\n\n\nfunction HistoryPage () {\n    // const [showModal, setShowModal] = useState<boolean>(false);\n    const profile: any  = useAppSelector(state => state.app.profile)\n    const [myVacations, setMyVacations] = useState([]);\n\n    const timeFormatter = timeFormat('%Y/%m/%d');\n\n    const getMyVacations = async () => {\n        try{\n            const response = await axios({\n                url: `${API_ADDRESS}/vacations?memberId=${profile._id}`,\n                method: 'get',\n            })\n            console.log( response);\n            // setMonthVacations(response.data);\n            setMyVacations(response.data);\n        }catch(e){\n            console.log(e);\n            // return e;\n        }\n    }\n    useEffect(()=>{getMyVacations()},[])\n    return (\n        <LayoutComp>\n\n            <HistoryBox>\n            <TitleBox>나의 휴가 히스토리</TitleBox>\n            <ListBox >\n                {\n                    myVacations.map((item : any) => {\n                        const date = new Date();\n                        const isAfter = moment(item.startDate).isAfter(date)\n                        const isBefore = moment(item.endDate).isBefore(date)\n                        return (\n                            <Link key={item._id} to={{pathname: `/history/${item._id}`,}} >\n                                <ListItemBox>\n                                    <div style={{display:'flex', flexDirection: 'column',justifyContent:'flex-start', alignItems:'flex-start'}}>\n                                        <div style={{fontSize: '0.8rem', lineHeight: '1rem',marginRight: '0.5rem'}}>{`${timeFormatter(new Date(item.startDate))} - ${timeFormatter(new Date(item.endDate))}`}</div>\n                                        <div style={{fontSize: '0.8rem', lineHeight: '1rem'}}>{`${item.vacationType} / ${item.timeType} / ${item.usedDate}`}</div>\n                                        {/* <div style={{fontSize: '0.8rem', marginRight: '0.5rem'}}>{`종료일 : 2021/07/08`}</div> */}\n                                    </div>\n                                    <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center'}}>\n                                        {isBefore ?  <div style={{border: '1px solid #F05A24', padding: '0.1rem 0.5rem', borderRadius: 8, color: '#F05A24', fontSize: '0.8rem'}}>휴가 완료</div> : null }\n                                        {isAfter ?  <div style={{border: '1px solid #35AE55', padding: '0.1rem 0.5rem', borderRadius: 8, color: '#35AE55', fontSize: '0.8rem'}}>휴가 예정</div> : null }\n                                        { !isAfter && !isBefore ?  <div style={{border: '1px solid #409FFE', padding: '0.1rem 0.5rem', borderRadius: 8, color: '#409FFE', fontSize: '0.8rem'}}>휴가 중🏄‍♂️</div> : null }\n\n                                        {/* <FontAwesomeIcon icon={faEllipsisV} size={'xs'} color={'#555'} />   */}\n                                    </div>\n                                </ListItemBox>\n                            </Link>\n                        )\n                    })\n                }\n\n\n            {/* <Link to={{pathname: `/history/${1}`,}} >\n                <ListItemBox>\n                        <div style={{display:'flex', flexDirection: 'column',justifyContent:'flex-start', alignItems:'flex-start'}}>\n                            <div style={{fontSize: '0.8rem', lineHeight: '1rem',marginRight: '0.5rem'}}>{`2021/07/05 - 2021/07/08`}</div>\n                            <div style={{fontSize: '0.8rem', lineHeight: '1rem'}}>연차 / 하루종일 / 4</div>\n\n                        </div>\n                        <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center'}}>\n                            <div style={{border: '1px solid red', padding: '0.1rem 0.5rem', borderRadius: 16, color: 'red', fontSize: '0.8rem', marginRight: '1rem'}}>승인 대기</div>\n                            <FontAwesomeIcon icon={faEllipsisV} size={'xs'} color={'#555'} />  \n                        </div>\n                </ListItemBox>\n            </Link>\n\n                    <ListItemBox>\n                            <div style={{display:'flex', flexDirection: 'column',justifyContent:'flex-start', alignItems:'flex-start'}}>\n                                <div style={{fontSize: '0.8rem', lineHeight: '1rem',marginRight: '0.5rem'}}>{`2021/07/05 - 2021/07/08`}</div>\n                                <div style={{fontSize: '0.8rem', lineHeight: '1rem'}}>연차 / 하루종일 / 4</div>\n                            </div>\n                            <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center'}}>\n                                <div style={{border: '1px solid #35AE55', padding: '0.1rem 0.5rem', borderRadius: 16, color: '#35AE55', fontSize: '0.8rem', marginRight: '1rem'}}>휴가 예정</div>\n                                <div>\n                                    <FontAwesomeIcon icon={faEllipsisV} size={'xs'} color={'#555'} />  \n                                </div>\n                                \n                            </div>\n                    </ListItemBox>\n\n                    <ListItemBox>\n                            <div style={{display:'flex', flexDirection: 'column',justifyContent:'flex-start', alignItems:'flex-start'}}>\n                                <div style={{fontSize: '0.8rem', lineHeight: '1rem',marginRight: '0.5rem'}}>{`2021/07/05 - 2021/07/08`}</div>\n                                <div style={{fontSize: '0.8rem', lineHeight: '1rem'}}>연차 / 하루종일 / 4</div>\n                            </div>\n                            <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center'}}>\n                                <div style={{border: '1px solid #409FFE', padding: '0.1rem 0.5rem', borderRadius: 16, color: '#409FFE', fontSize: '0.8rem', marginRight: '1rem'}}>휴가 완료</div>\n                                <FontAwesomeIcon icon={faEllipsisV} size={'xs'} color={'#555'} />  \n                            </div>\n                    </ListItemBox> */}\n            </ListBox>\n\n           \n            </HistoryBox>\n        </LayoutComp>\n    )\n}\n\nexport default HistoryPage;","import {LayoutBox, MainComp, Header2, BottomTabBar} from 'components/LayoutComp';\nimport { useAppSelector } from 'hooks';\nimport moment from 'moment';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\nimport { TimeFormat_YmdHM } from 'utils/timeFormatter';\nimport { API_ADDRESS } from 'apis';\n\n// import {LayoutBox} from ''\n\n// interface IVacationCounts {\n//     etcDate: number;\n//     totalDate: number;\n//     usedDate: number;\n//     year: number;\n//     _id: string;\n// }\n\n// const HeaderBox = styled.header`\n//     position: absolute;\n//     left: 0;\n//     top: 0;\n//     width: 100%;\n//     height: 3rem;\n    \n//     display: flex;\n//     justify-content: center;\n//     align-items: center;\n// `;\n\nfunction HistoryViewPage () {\n    let { id } = useParams();\n    const { token} = useAppSelector(state => state.app);\n    // const profile: any  = useAppSelector(state => state.app.profile)\n    // const [thiYear, setThisYear] = useState<number>(() => moment().get('year'))  \n    // const [thisYearVacationCounts, setThisYearVacationCounts] = useState<IVacationCounts>({\n    //     etcDate: 0,\n    //     totalDate: 0,\n    //     usedDate: 0,\n    //     year: 0,\n    //     _id: \"id\"\n    // })\n\n\n    useEffect(()=>{\n        // // console.log(moment().get('year'))\n        // console.log(profile)\n        // const thisYearVacationCounts = profile.vacationCounts.filter((item : {year: number} ) => item.year === moment().get('year'));\n        // setThisYearVacationCounts(thisYearVacationCounts[0]);\n        // console.log(thisYearVacationCounts)\n        getMyVacations(id);\n\n    },[]);\n\n    const [vacation, setVacation] = useState({});\n    const getMyVacations = async (_id) => {\n        try{\n            const response = await axios({\n                url: `${API_ADDRESS}/vacations?id=${_id}`,\n                method: 'get',\n            })\n            console.log(response);\n            setVacation(response.data[0]);\n        }catch(e){\n            console.log(e);\n        }\n    }\n    const [successRemove, setSuccessRemove] = useState(false);\n\n    const removeVacation = async (id) => {\n        try{\n            const response = await axios({\n                url: `${API_ADDRESS}/api/vacations/${id}`,\n                method: 'delete',\n                headers: { Authorization: `Bearer ${token}` },\n            })\n            console.log(response);\n            if(response.status === 204) {\n                setSuccessRemove(true);\n            }\n            // setVacation(response.data[0]);\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    useEffect(() => {\n        getMyVacations(id);\n    }, [id]);\n\n    if(successRemove){\n        return (\n            <LayoutBox>\n                <Header2/>\n                <MainComp >\n                    해당 휴가를 취소하였습니다.\n                </MainComp>\n                <BottomTabBar />\n            </LayoutBox>\n        )\n    }\n    \n    return (\n        <LayoutBox>\n            <Header2 />\n            <MainComp >\n                {/* <div>{id}</div> */}\n                <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between', alignItems: 'center', padding: '1rem', borderBottom: '1px solid #e5e5e5'}}>\n                    <div>휴가 유형</div>\n                    <div>{vacation.vacationType}</div>\n                </div>\n\n                <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between', alignItems: 'center', padding: '1rem', borderBottom: '1px solid #e5e5e5'}}>\n                    <div>시간 유형</div>\n                    <div>{vacation.timeType}</div>\n                </div>\n\n                <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between', alignItems: 'center', padding: '1rem', borderBottom: '1px solid #e5e5e5'}}>\n                    <div>휴가 시작</div>\n                    <div>{TimeFormat_YmdHM(vacation.startDate)}</div>\n                </div>\n\n                <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between', alignItems: 'center', padding: '1rem', borderBottom: '1px solid #e5e5e5'}}>\n                    <div>휴가 종료</div>\n                    <div>{TimeFormat_YmdHM(vacation.endDate)}</div>\n                </div>\n\n                <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between', alignItems: 'center', padding: '1rem', borderBottom: '1px solid #e5e5e5'}}>\n                    <div>사용한 휴가 일수</div>\n                    <div>{vacation.usedDate}</div>\n                </div>\n                <div style={{display: 'flex', flexDirection: 'column', justifyContent:'space-between', alignItems: 'flex-start', padding: '1rem', borderBottom: '1px solid #e5e5e5'}}>\n                    <div style={{marginBottom: '0.5rem'}}>휴가 사유</div>\n                    <div>{vacation.response ?  vacation.response : '휴가 사유가 없습니다. '}</div>\n                </div>\n\n                <div \n                    style={{background: 'white', color: '#F05A24', border: '1px solid #F05A24', padding: '0.5rem 4rem', margin: '2rem 1rem', borderRadius: '16px', display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n                    onClick={() => removeVacation(id)}\n                >휴가 취소 하기</div>\n            </MainComp>\n\n            <BottomTabBar />\n        </LayoutBox>\n    )\n}\n\nexport default HistoryViewPage;\n\n","import LayoutComp from 'components/LayoutComp';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { useAppSelector } from 'hooks';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { timeFormat } from 'd3-time-format';\nimport { TimeFormat_Ymd } from 'utils/timeFormatter';\nimport { API_ADDRESS } from 'apis';\n\nconst HomeBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    overflow: scroll;\n`\n\nconst ListBox = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nconst ListTitleBox = styled.div`\n    font-weight: bold;\n    padding: 0.5rem 1rem;\n`;\n\nconst ListItemBox = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0.5rem 1rem;\n    background-color: ${props => props.theme.colors.gray};\n    /* background-color: rgb(13, 17, 22); */\n    /* border: 0.5px solid #30363D; */\n    margin: 0 0.5rem 0.5rem 0.5rem;\n    border-radius: 8px;\n\n    .left {\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-start;\n        align-items: center;\n    }\n\n    .left-name-box {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        margin-left: 1rem;\n        height: 36px;\n    }\n\n    .name {\n        font-size: 1rem;\n        font-weight: 600;\n\n    }\n\n    .position {\n        font-size: 0.8rem;\n        color: darkgray;\n    }\n\n    .right {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        align-items: flex-end;\n    }\n\n    .right-date {\n        font-size: 0.8rem;\n        color: black;\n    }\n\n    .right-type {\n        font-size: 0.8rem;\n        color: black;\n    }\n\n    \n\n`;\n\nfunction HomePage () {\n    const history = useHistory();\n    // const {user} = useAppSelector(state => state.app)\n    const timeFormatter = timeFormat('%Y/%m/%d');\n\n    const [commingVacations, setCommingVacations] = useState<any[]>([]);\n    const [todayVacations, setTodayVacations]   = useState<any[]>([]);\n\n    const getTodayVacations = async () => {\n        // const localTime = moment().format('YYYY-MM-DD'); // store localTime\n        // const proposedDate = localTime + \"T00:00:00.000Z\";\n        \n        const localTime = moment().format('YYYY-MM-DD'); // store localTime\n        const proposedStartDate = localTime + \"T00:00:00.000Z\"; \n        const proposedEndDate = localTime + \"T23:59:59.000Z\";\n\n        try{\n            const response = await axios({\n                url: `${API_ADDRESS}/vacations?from=${proposedStartDate}&to=${proposedEndDate}`,\n                method: 'get',\n            })\n            console.log(response);\n            setTodayVacations(response.data);\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    const getCommingVacations = async () => {\n        const startDate = moment().add(1, 'days').format('YYYY-MM-DD'); // store localTime\n        const proposedStartDate = startDate + \"T00:00:00.000Z\";\n        const endDate = moment().add(14, 'days').format('YYYY-MM-DD');\n        const proposedEndDate = endDate + \"T23:59:59.000Z\";\n\n        try{\n            const response = await axios({\n                url: `${API_ADDRESS}/vacations?from=${proposedStartDate}&to=${proposedEndDate}`,\n                method: 'get',\n            })\n            console.log('getCommingVacations', response);\n            setCommingVacations(response.data.slice(1));\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    useEffect(()=>{\n        getTodayVacations();\n        getCommingVacations();\n    },[])\n\n    return (\n        <LayoutComp>\n            <HomeBox>\n                <ListBox>\n                    <ListTitleBox><span>나를 찾지 마세요 🏖</span></ListTitleBox>\n                    {\n                        todayVacations.length ? (\n                            todayVacations?.map(item => {\n                                return (\n                                    <ListItemBox key={item._id}>\n                                        <div className=\"left\">\n                                            {/* <div style={{width: '38px', height: '38px', backgroundColor: 'skyblue', borderRadius: 16}}/> */}\n                                            <img src={`${item?.member?.thumbnail}`} style={{width: '38px', height: '38px', backgroundColor: 'skyblue', borderRadius: 16}}/>\n                                            <div className=\"left-name-box\">\n                                                <div className=\"name\">{`${item?.member?.nickname || ''} (${item?.member?.name || ''})`}</div>\n                                                <div className=\"position\">{item?.member?.role || ''}</div>\n                                            </div>\n                                        </div>\n                                        \n                                        <div className=\"right\">\n                                        <div className=\"right-date\">{`${TimeFormat_Ymd(new Date(item.startDate))} - ${TimeFormat_Ymd(new Date(item.endDate))}`}</div> \n                                        <div className=\"right-type\">{`${item.vacationType} / ${item.timeType} / ${item.usedDate}`}</div>\n                                        </div>\n                                    </ListItemBox>\n                                )\n                            })\n                        ) : (\n                            null\n                        )\n                    }\n                </ListBox>\n\n                <ListBox>\n                    <ListTitleBox>다음 휴가는 접니다 🚴‍♂️ </ListTitleBox>\n                    {\n                        commingVacations?.map(item => {\n                            return (\n                                <ListItemBox key={item._id}>\n                                    <div className=\"left\">\n                                        {/* <div style={{width: '38px', height: '38px', backgroundColor: 'skyblue', borderRadius: 16}}/> */}\n                                        <img src={`${item?.member?.thumbnail}`} style={{width: '38px', height: '38px', backgroundColor: 'skyblue', borderRadius: 16, border: '1px solid #ddd'}}/>\n                                        <div className=\"left-name-box\">\n                                            <div className=\"name\">{`${item?.member?.nickname || ''} (${item?.member?.name || ''})`}</div>\n                                            <div className=\"position\">{item?.member?.role || ''}</div>\n                                        </div>\n                                    </div>\n                                    \n                                    <div className=\"right\">\n                                    <div className=\"right-date\">{`${TimeFormat_Ymd(new Date(item.startDate))} - ${TimeFormat_Ymd(new Date(item.endDate))}`}</div> \n                                    <div className=\"right-type\">{`${item.vacationType} / ${item.timeType} / ${item.usedDate}`}</div>\n                                    </div>\n                                </ListItemBox>\n                            )\n                        })\n                    }\n                </ListBox>\n            </HomeBox>\n        </LayoutComp>\n    )\n}\n\nexport default HomePage;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.div`\n    border: none;\n    border-radius: 4px;\n    font-size: 1rem;\n    font-weight: bold;\n    /* padding: 0.25rem 1rem; */\n    color: white;\n    outline: none;\n    cursor: pointer;\n\n    height: 36px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    background: #46BDFE;\n    &:hover{\n        background: #409FFE;\n    }\n`\ninterface BttonProps {\n    title: string;\n    onClick: () => void;\n}\n\nconst Button = ( props : BttonProps ) => <StyledButton onClick={props.onClick}>{props.title}</StyledButton>\n\nexport default Button;","import React, { useState } from 'react';\nimport LayoutComp from 'components/LayoutComp';\nimport Button from 'components/common/Button';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { useAppDispatch, useAppSelector } from 'hooks';\nimport { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport {  setProfile, setToken } from 'appSlice';\nimport { API_ADDRESS } from 'apis';\n// import styled from 'styled-components';\n\nconst LayoutBox = styled.div`\n    position: absolute;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    background: #F3F5F6;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    overflow: scroll;\n`\n\nfunction LoginPage () {\n    const [form, setForm] = useState({email: '', password: ''});\n    // const [password, setPassword] = useState('');\n    \n\n    \n    const {profile, token}= useAppSelector(state => state.app);\n    const dispatch = useAppDispatch();\n    const history = useHistory();\n\n    useEffect(()=>{\n        if(profile) history.push('/');\n    },[profile])\n\n    const onChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n        const {name, value} = e.target;\n\n        console.log({name, value})\n        setForm({\n          ...form,\n         [name]: value,\n        })\n    }\n\n    const handleSubmit = async () => {\n        try{\n            const response = await axios({\n                url: `${API_ADDRESS}/auth/login`,\n                method: 'post',\n                data: form,\n            })\n            console.log(response);\n            console.log('logined')\n\n            dispatch(setProfile(response.data.profile));\n            dispatch(setToken(response.data.token));\n\n            localStorage.setItem(\"access_token\", response.data.token);\n        }catch(e){\n            console.log('Login Error : ', e.response)\n            const {status} = e.response;\n            if( status === 400 ){\n                alert(\"잘못된 요청입니다.\");\n            }else if(status === 401) {\n                alert(\"존재하지 않는 이메일이거나 비밀번호가 틀렸습니다.\");\n            }\n        }\n    }\n\n    return (\n        <LayoutBox>\n           <div style={{display: 'flex', flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n               <div className=\"LoginForm\" style={{padding: '2rem'}}>\n                    {/* <div className=\"title\" style={{display:'flex', flexDirection: 'column',  justifyContent: 'center', alignItems: 'center', marginBottom: 36}}>\n                        <span style={{fontSize: 40, fontWeight: 'bold', color: '#47BDFE', }}>WVMS</span>  \n                    </div> */}\n\n                    {/* <div style={{display: 'flex', justifyContent: 'center'}}>\n                        <span style={{fontSize: 28, fontWeight: 'bold',}}>로그인</span>   \n                    </div> */}\n\n                    <form style={{display: 'flex', flexDirection: 'column',  width: 300}}>\n                        <div style={{display: 'flex', flexDirection: 'column', marginBottom: 24}}>\n                        <label style={{fontSize: '0.8rem', fontWeight: 'bold', marginBottom: 5}}>이메일</label>\n                            <input type=\"text\" name=\"email\" value={form.email} onChange={onChange} style={{outlineStyle: 'none', border: '0.5px solid gray', borderRadius: 4, height: 36, padding: '0.3rem' }} placeholder={\"Email\"} />\n                        </div>\n\n                        <div style={{display: 'flex', flexDirection: 'column', marginBottom: 32}}>\n                            <label style={{fontSize: '0.8rem', fontWeight: 'bold', marginBottom: 5}}>비밀번호</label>\n                            <input type=\"password\" name=\"password\"  value={form.password} onChange={onChange} style={{outlineStyle: 'none', border: '0.5px solid gray', borderRadius: 4, height: 36, padding: '0.3rem' }} placeholder={\"Password\"} />\n                        </div>\n\n                        <Button title={\"로그인\"} onClick={ () => handleSubmit()} />\n                    </form>\n\n                    <div style={{display: 'flex', justifyContent: 'center', marginTop: 32}}>\n                        <span style={{fontSize: '0.8rem'}}>회원이 아니신가요? <Link to=\"/register\"><a style={{color: '#409FFE', fontWeight: 'bold'}}>회원가입하기</a></Link></span>\n                    </div>\n               </div>\n               <div className=\"title\" style={{position: 'absolute', top: 100, width: '100%',display:'flex', justifyContent: 'center', alignItems: 'center', marginBottom: 36}}>\n                <span style={{fontSize: 40, fontWeight: 'bold', color: '#47BDFE'}}>WVMS</span>\n            </div>\n           </div>\n        </LayoutBox>\n    )\n}\n\nexport default LoginPage;","import LayoutComp from 'components/LayoutComp';\nimport { useAppDispatch, useAppSelector } from 'hooks';\nimport moment from 'moment';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { TimeFormat_Ymd } from 'utils/timeFormatter';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronCircleRight, faCog,  } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport { getProfile } from 'apis';\nimport { setProfile, setToken } from 'appSlice';\n\ninterface IVacationCounts {\n    etcDate: number;\n    totalDate: number;\n    usedDate: number;\n    year: number;\n    _id: string;\n}\n\nfunction ProfilePage () {\n    const dispatch = useAppDispatch();\n    const {token}: any  = useAppSelector(state => state.app);\n    const profile: any  = useAppSelector(state => state.app.profile)\n    const [thiYear, setThisYear] = useState<number>(() => moment().get('year'))  \n    const [thisYearVacationCounts, setThisYearVacationCounts] = useState<IVacationCounts>({\n        etcDate: 0,\n        totalDate: 0,\n        usedDate: 0,\n        year: 0,\n        _id: \"id\"\n    })\n\n    const dispatchProfile = async (token: string) => {\n        try{\n            const response = await getProfile(token);\n            if(response.status === 200 ){\n                dispatch(setProfile(response.data));\n              }\n        }catch(e){\n            console.log('getProfile Error: ', e)\n        }\n       \n\n    }\n\n    const handleLogout = () => {\n        dispatch(setToken(null));\n        dispatch(setProfile(null));\n        localStorage.clear()\n    }\n\n    useEffect(()=>{  dispatchProfile(token);},[])\n\n    useEffect(()=>{\n        // console.log(moment().get('year'))\n        console.log(profile)\n        const thisYearVacationCounts = profile.vacationCounts.filter((item : {year: number} ) => item.year === moment().get('year'));\n        setThisYearVacationCounts(thisYearVacationCounts[0]);\n        console.log(thisYearVacationCounts)\n\n    },[profile]);\n    \n    return (\n        <LayoutComp>\n            <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center',  padding: '1rem', borderBottom: '1px solid #e5e5e5'}}>\n                {/* <div style={{width: '4rem', height: '4rem', backgroundColor: 'skyblue', borderRadius: 20}}></div> */}\n                <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center'}}>\n                    <img src={profile?.thumbnail} style={{width: '4rem', height: '4rem', backgroundColor: 'skyblue', borderRadius: 20, border: '1px solid #ddd'}} ></img>\n                    <div style={{marginLeft: '1rem'}}>\n                        <div style={{marginBottom: '0.5rem'}}>{profile?.nickname || ' '}</div>\n                        <div>{profile?.role || ' '}</div>\n                    </div>\n                </div>\n\n                <Link to='/setting'><FontAwesomeIcon icon={faCog} /></Link>\n            </div>\n\n            <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between', alignItems: 'center', padding: '1rem', borderBottom: '1px solid #e5e5e5'}}>\n                <div>이메일 </div>\n                <div>{profile.email}</div>\n            </div>\n\n            <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between', alignItems: 'center', padding: '1rem', borderBottom: '1px solid #e5e5e5'}}>\n                <div>입사일 </div>\n                <div>{TimeFormat_Ymd(profile.dateOfAntry)}</div>\n            </div>\n\n            <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between', alignItems: 'center', padding: '1rem', borderBottom: '1px solid #e5e5e5'}}>\n                <div>{`${thiYear} 연차일수`}</div>\n                <div>{thisYearVacationCounts.totalDate}</div>\n            </div>\n\n            <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between', alignItems: 'center', padding: '1rem', borderBottom: '1px solid #e5e5e5'}}>\n                <div>사용 연차</div>\n                <div>{thisYearVacationCounts.usedDate}</div>\n            </div>\n\n            <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between', alignItems: 'center', padding: '1rem', borderBottom: '1px solid #e5e5e5'}}>\n                <div>미사용 연차</div>\n                <div>{thisYearVacationCounts.totalDate - thisYearVacationCounts.usedDate}</div>\n            </div>\n\n            <div \n            onClick={() => handleLogout()}\n            style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between', alignItems: 'center', padding: '1rem', borderBottom: '1px solid #e5e5e5', cursor: 'pointer'}}>\n                <div>로그아웃</div>\n                {/* <div>{thisYearVacationCounts.totalDate - thisYearVacationCounts.usedDate}</div> */}\n            </div>\n\n        </LayoutComp>\n    )\n}\n\nexport default ProfilePage;","const calcRem = (size: Number): String => {\n    return `${+size / 16}rem`;\n}\n\nconst fontSizes = {\n  small: calcRem(14),\n  base: calcRem(16),\n  lg: calcRem(18),\n  xl: calcRem(20),\n  xxl: calcRem(22),\n  xxxl: calcRem(24),\n  titleSize: calcRem(50),\n};\n\nconst paddings = {\n  small: calcRem(8),\n  base: calcRem(10),\n  lg: calcRem(12),\n  xl: calcRem(14),\n  xxl: calcRem(16),\n  xxxl: calcRem(18),\n};\n\nconst margins = {\n  small: calcRem(8),\n  base: calcRem(10),\n  lg: calcRem(12),\n  xl: calcRem(14),\n  xxl: calcRem(16),\n  xxxl: calcRem(18),\n};\n\nconst interval = {\n  base: calcRem(50),\n  lg: calcRem(100),\n  xl: calcRem(150),\n  xxl: calcRem(200),\n};\n\nconst verticalInterval = {\n  base: `${calcRem(10)} 0 ${calcRem(10)} 0`,\n};\n\nconst deviceSizes = {\n  mobileS: \"320px\",\n  mobileM: \"375px\",\n  mobileL: \"450px\",\n  tablet: \"768px\",\n  tabletL: \"1024px\",\n};\n\nconst darkTheme = {\n    colors : {\n        default: '#323233',\n        primary: '#111',\n        secondary: '#222',\n        font_1: '#444',\n        font_2: '#555',\n        underline: '#323233',\n        background: '#0A0C10',\n        white: '#ffffff',\n        black: '#111111',\n        gray: '#e5e5e5',\n       \n    }\n\n}\n\nconst lightTheme = {\n    colors : {\n        default: '#eeeeee',\n        primary: '#111',\n        secondary: '#222',\n        font_1: '#444',\n        font_2: '#555',\n        underline: '#eeeeee',\n        background: '#ffffff',\n        white: '#ffffff',\n        black: '#111111',\n        gray: '#eeeeee'\n    }\n}\n\nconst colors = {\n  black: \"#000000\",\n  white: \"#FFFFFF\",\n  gray_1: \"#222222\",\n  gray_2: \"#767676\",\n  green_1: \"#3cb46e\",\n};\n\nconst device = {\n  mobileS: `only screen and (max-width: ${deviceSizes.mobileS})`,\n  mobileM: `only screen and (max-width: ${deviceSizes.mobileM})`,\n  mobileL: `only screen and (max-width: ${deviceSizes.mobileL})`,\n  tablet: `only screen and (max-width: ${deviceSizes.tablet})`,\n  tabletL: `only screen and (max-width: ${deviceSizes.tabletL})`,\n};\n\nconst theme = {\n    lightTheme,\n    darkTheme,\n  fontSizes,\n  colors,\n  deviceSizes,\n  device,\n  paddings,\n  margins,\n  interval,\n  verticalInterval,\n};\n\nexport default theme;","import React, { useState } from 'react';\nimport LayoutComp from 'components/LayoutComp';\nimport Button from 'components/common/Button';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { useAppDispatch, useAppSelector } from 'hooks';\nimport { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEye, faEyeSlash} from '@fortawesome/free-solid-svg-icons'\nimport {  setProfile, setToken } from 'appSlice';\nimport moment from 'moment';\nimport { API_ADDRESS } from 'apis';\n// import styled from 'styled-components';\n\nconst LayoutBox = styled.div`\n    position: absolute;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    background: #F3F5F6;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    overflow: scroll;\n`\n\nfunction RegisterPage () {\n    const [form, setForm] = useState({email: '', password: '', name: '', nickname: '', role: '', dateOfAntry: '', totalDate: 15, usedDate: 0});\n    // const [password, setPassword] = useState('');\n    \n\n    \n    const {profile, token}= useAppSelector(state => state.app);\n    const dispatch = useAppDispatch();\n    const history = useHistory();\n\n    useEffect(()=>{\n        if(profile) history.push('/');\n    },[profile])\n\n    const onChange = (e:React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLSelectElement>) => {\n        const {name, value} = e.target;\n\n        console.log({name, value})\n        setForm({\n          ...form,\n         [name]: value,\n        })\n    }\n\n    const handleSubmit = async () => {\n        console.log(form);\n        const d = form.dateOfAntry.split('/')\n        console.log(d);\n        // console.log(new Date(Number(d[0]), Number(d[1])-1, Number(d[2]) ));\n        const _dateOfAntry = new Date(Number(d[0]), Number(d[1])-1, Number(d[2]) );\n        // const _vacationCounts  = [{\n        //     year: new Date().getFullYear(),\n        //     totalDate: 15, // 전체 연차 일 수\n        //     usedDate: 0, // 사용한 연차 일 수\n        //     etcDate: 0, \n        // }]\n\n        const { email, password, name, nickname, role, dateOfAntry, totalDate, usedDate} = form;\n        const data = {\n            email,\n            password,\n            name, \n            nickname,\n            role,\n            dateOfAntry,\n            vacationCounts: [{\n                year: new Date().getFullYear(),\n                totalDate,\n                usedDate,\n                etcDate: 0,\n            }],\n        }\n\n        console.log(data);\n        try{\n            const response = await axios({\n                url: `${API_ADDRESS}/auth/register`,\n                method: 'post',\n                data: data,\n            })\n            console.log(response);\n            // if(response.status === 200) {\n            //     setType('success');\n            // }\n            dispatch(setProfile(response.data.profile));\n            dispatch(setToken(response.data.token));\n        }catch(e){\n            console.log('register Error : ', e.response)\n        }\n    }\n\n    const [type, setType] = useState<string>('AccountInfo'); // AccountInfo, PersonalInfo, VacationInfo\n    const handleNext = (next: string) => {\n        setType(next);\n        // console.log('setType')\n    }\n\n    const [isShowPassword, setShowPassword] = useState(false);\n\n    return (\n        <LayoutBox>\n           <div style={{display: 'flex', flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n               <div className=\"LoginForm\" style={{padding: '2rem'}}>\n\n\n                    {type === 'AccountInfo' ? (\n                        <form style={{display: 'flex', flexDirection: 'column',  width: 300}}>\n                            <div style={{display: 'flex', flexDirection: 'column', marginBottom: 24}}>\n                            <label style={{fontSize: '0.8rem', fontWeight: 'bold', marginBottom: 5}}>이메일</label>\n                                <input type=\"text\" name=\"email\" value={form.email} onChange={onChange} style={{outlineStyle: 'none', border: '0.5px solid gray', borderRadius: 4, height: 36, padding: '0.3rem' }} placeholder={\"ex) woody@biskitlab.com\"} />\n                            </div>\n\n                            <div style={{display: 'flex', flexDirection: 'column', marginBottom: 32, position: 'relative'}}>\n                                <label style={{fontSize: '0.8rem', fontWeight: 'bold', marginBottom: 5}}>비밀번호</label>\n                                <input type={isShowPassword ? 'text' : 'password'} name=\"password\"  value={form.password} onChange={onChange} style={{outlineStyle: 'none', border: '0.5px solid gray', borderRadius: 4, height: 36, padding: '0.3rem' }} placeholder={\"비밀번호를 입력해 주세요.\"} />\n                                <div style={{position: 'absolute', bottom: 10, right: 10}} onClick={() => setShowPassword((prev) => !prev)}>\n                                    { isShowPassword ?  <FontAwesomeIcon icon={faEye} color={'black'}/> :  <FontAwesomeIcon icon={faEyeSlash} color={'black'}/>}\n                                </div>\n                            </div>\n\n                           \n                            <Button title={\"다음\"} onClick={ () => handleNext('PersonalInfo')} />\n                        </form>\n                    ) : null}\n\n                    { type === 'PersonalInfo' ? (\n                        <form style={{display: 'flex', flexDirection: 'column',  width: 300}}>\n                            <div style={{display: 'flex', flexDirection: 'column', marginBottom: 18}}>\n                            <label style={{fontSize: '0.8rem', fontWeight: 'bold', marginBottom: 5}}>이름</label>\n                                <input type=\"text\" name=\"name\" value={form.name} onChange={onChange} style={{outlineStyle: 'none', border: '0.5px solid gray', borderRadius: 4, height: 36, padding: '0.3rem' }} placeholder={\"본인 실명을 입력해 주세요.\"} />\n                            </div>\n\n                            <div style={{display: 'flex', flexDirection: 'column', marginBottom: 18}}>\n                                <label style={{fontSize: '0.8rem', fontWeight: 'bold', marginBottom: 5}}>닉네임</label>\n                                <input type=\"text\" name=\"nickname\"  value={form.nickname} onChange={onChange} style={{outlineStyle: 'none', border: '0.5px solid gray', borderRadius: 4, height: 36, padding: '0.3rem' }} placeholder={\"회사에서 사용하는 닉네임을 입력해 주세요.\"} />\n                            </div>\n\n                            <div style={{display: 'flex', flexDirection: 'column', marginBottom: 18}}>\n                                <label style={{fontSize: '0.8rem', fontWeight: 'bold', marginBottom: 5}}>직무</label>\n                                {/* <input type=\"text\" name=\"role\"  value={form.role} onChange={onChange} style={{outlineStyle: 'none', border: '0.5px solid gray', borderRadius: 4, height: 36, padding: '0.3rem' }} placeholder={\"비밀번호를 입력해 주세요.\"} /> */}\n\n                                <select name=\"role\" style={{outlineStyle: 'none', height: 36,padding: '0.3rem' ,border: '0.5px solid gray', borderRadius: 4, backgroundColor: 'white'}} onChange={onChange}>\n                                    <option value=\"\">직무선택</option>\n                                    <option value=\"기획자\">기획자</option>\n                                    <option value=\"디자이너\">디자이너</option>\n                                    <option value=\"개발자\">개발자</option>\n                                </select>\n                            </div>\n\n                            <div style={{display: 'flex', flexDirection: 'column', marginBottom: 32}}>\n                                <label style={{fontSize: '0.8rem', fontWeight: 'bold', marginBottom: 5}}>입사일</label>\n                                <input type=\"text\" name=\"dateOfAntry\"  value={form.dateOfAntry} onChange={onChange} style={{outlineStyle: 'none', border: '0.5px solid gray', borderRadius: 4, height: 36, padding: '0.3rem' }} placeholder={\"ex) 2021/07/21\"} />\n                            </div>\n\n                            <Button title={\"다음\"} onClick={ () => handleNext('VacationInfo')} />\n                            {/* <Button title={\"가입하기\"} onClick={ () => handleSubmit()} /> */}\n                        </form>\n                        ): null\n                    }\n\n                    { type === 'VacationInfo' ? (\n                        <form style={{display: 'flex', flexDirection: 'column',  width: 300}}>\n                            <div style={{display: 'flex', flexDirection: 'column', marginBottom: 18}}>\n                            <label style={{fontSize: '0.8rem', fontWeight: 'bold', marginBottom: 5}}>{`${new Date().getFullYear()} 총 연차일수`}</label>\n                                <input type=\"text\" name=\"totalDate\" value={form.totalDate} onChange={onChange} style={{outlineStyle: 'none', border: '0.5px solid gray', borderRadius: 4, height: 36, padding: '0.3rem' }} placeholder={\"본인 실명을 입력해 주세요.\"} />\n                            </div>\n\n                            <div style={{display: 'flex', flexDirection: 'column', marginBottom: 18}}>\n                                <label style={{fontSize: '0.8rem', fontWeight: 'bold', marginBottom: 5}}>현재 사용한 연차일수</label>\n                                <input type=\"text\" name=\"usedDate\"  value={form.usedDate} onChange={onChange} style={{outlineStyle: 'none', border: '0.5px solid gray', borderRadius: 4, height: 36, padding: '0.3rem' }} placeholder={\"회사에서 사용하는 닉네임을 입력해 주세요.\"} />\n                            </div>\n\n                            <Button title={\"가입하기\"} onClick={ () => handleSubmit()} />\n                        </form>\n                        ): null\n                    }\n\n               </div>\n           </div>\n           <div className=\"title\" style={{position: 'absolute', top: 100, width: '100%',display:'flex', justifyContent: 'center', alignItems: 'center', marginBottom: 36}}>\n               <span style={{fontSize: 28, fontWeight: 'bold', color: '#47BDFE'}}>회원가입</span>\n            </div>\n           <div style={{position: 'absolute', left: 30, top: 10}}>\n                 <Link to=\"/\"><span style={{fontSize: '1.2rem', fontWeight: 'bold', color: '#47BDFE'}}>WVMS</span></Link>\n            </div>  \n           <div style={{position: 'absolute', right: 30, top: 10}}>\n                <Link to=\"/login\"><a style={{fontSize: '0.8rem', color: '#409FFE', fontWeight: 'bold', borderBottom: '1px solid #409FFE'}}>로그인하러 가기</a></Link>\n            </div>\n        </LayoutBox>\n    )\n}\n\nexport default RegisterPage;","import React from 'react';\n\nimport ApplicationPage from 'pages/Application/ApplicationPage';\nimport CalendarPage from 'pages/Calendar/CalendarPage';\nimport HistoryPage from 'pages/History/HistoryPage';\nimport HistoryViewPage from 'pages/HistoryView/HistoryViewPage';\nimport HomePage from 'pages/Home/HomePage';\nimport LoginPage from 'pages/Login/LoginPage';\nimport ProfilePage from 'pages/Profile/ProfilePage';\n\nimport { BrowserRouter, Route, Switch, Redirect, useParams, useHistory } from 'react-router-dom';\n\nimport { ThemeProvider } from \"styled-components\";\nimport theme from 'theme/theme';\nimport { useAppDispatch, useAppSelector } from 'hooks';\nimport { useEffect } from 'react';\nimport RegisterPage from 'pages/Register/RegisterPage';\nimport { setProfile, setToken } from 'appSlice';\nimport axios from 'axios';\nimport { getProfile } from 'apis';\n\n\nconst { darkTheme, lightTheme } = theme;\n\nfunction App() {\n\n  const {isDark} = useAppSelector((state) => state.theme)\n  const dispatch = useAppDispatch()\n\n  const history = useHistory();\n\n  // useEffect(()=>{\n  //   console.log(isDark);\n  // }, [isDark])\n  // const getProfile = async (token: string) => {\n  //   try{\n  //     const response = await axios({\n  //       url: 'http://localhost:3011/api/auth/profile',\n  //       method: 'get',\n  //       headers: { Authorization: `Bearer ${token}` },\n  //   })\n  //   console.log('getProfile : ', response);\n  //   return response;\n  \n  //   // return response;\n\n  //   }catch(e) {\n  //     console.log('getProfile Error :', e)\n  //     return e.response;\n  //   }\n  // }\n\n \n  const dispachProfile = async (token: string) => {\n    const response = await getProfile(token);\n    if(response.status === 200 ){\n      dispatch(setProfile(response.data));\n    }\n  }\n\n  useEffect(()=>{\n    const access_token = localStorage.getItem('access_token');\n    console.log('access_token', access_token)\n    if(access_token) {\n      dispatch(setToken(access_token));\n      dispachProfile(access_token);\n      // history.push('/');\n     \n      // getProfile(access_token);\n      // console.log(response);\n      // if(response.status === 200) \n      //   dispatch(setProfile(response.data));\n    }\n  }, [])\n\n  return (\n    <BrowserRouter>\n      <ThemeProvider theme={ isDark ?  darkTheme: lightTheme}>\n        <Switch>\n         <Route path=\"/login\" component={LoginPage}  />\n         <Route path=\"/register\" component={RegisterPage}  />\n          <PrivateRoute exact path=\"/\"  > \n            <HomePage />\n          </PrivateRoute>\n          <PrivateRoute path=\"/Calendar\"  > \n            <CalendarPage />\n          </PrivateRoute>\n          <PrivateRoute path=\"/Application\"  > \n            <ApplicationPage />\n          </PrivateRoute>\n          <PrivateRoute exact path=\"/History/:id\"  > \n            <HistoryViewPage />\n          </PrivateRoute>\n          <PrivateRoute path=\"/History\"  > \n            <HistoryPage />\n          </PrivateRoute>\n          <PrivateRoute path=\"/Profile\"  > \n            <ProfilePage />\n          </PrivateRoute> \n        </Switch>\n        </ThemeProvider>\n    </BrowserRouter>\n  );\n}\n\n\nfunction PrivateRoute({children, ...rest}:any) {\n  const {profile} = useAppSelector((state) => state.app)\n\n  return (\n    <Route\n     {...rest}\n      render={({ location }) =>\n      profile ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default App;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport type { RootState } from '../store'\n\n// Define a type for the slice state\ninterface IThemeState {\n  isDark: boolean\n}\n\n// Define the initial state using that type\nconst initialState: IThemeState = {\n    isDark: false,\n}\n\nexport const themeSlice = createSlice({\n  name: 'theme',\n  // `createSlice` will infer the state type from the `initialState` argument\n  initialState,\n  reducers: {\n      setIsDart: (state, action) => { state.isDark = action.payload }\n  },\n})\n\nexport const { setIsDart } = themeSlice.actions\n\n// Other code such as selectors can use the imported `RootState` type\n// export const selectCount = (state: RootState) => state.theme.isDark\n\nexport default themeSlice.reducer;","import { configureStore } from \"@reduxjs/toolkit\";\nimport  themeReducer  from \"./theme/themeSlice\";\nimport appReducer from \"./appSlice\";\n\nexport const store = configureStore({\n    reducer: {\n      theme: themeReducer,\n      app: appReducer\n    },\n  })\n  \n  // Infer the `RootState` and `AppDispatch` types from the store itself\n  export type RootState = ReturnType<typeof store.getState>\n  // Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\n  export type AppDispatch = typeof store.dispatch\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { store } from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n     <Provider store={store}>\n     <App />\n     </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}